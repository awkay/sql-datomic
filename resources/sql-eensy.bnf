sql_data_statement ::= delete_statement
                     | select_statement
                     | insert_statement
                     | update_statement

delete_statement ::=
    <"DELETE"> <"FROM"> table_name
    [ where_clause ]

insert_statement ::=
                 <"INSERT"> <"INTO"> table_name
                 <"("> insert_cols <")">
                 <"VALUES">
                 <"("> insert_vals <")">

select_statement ::= <"SELECT"> select_list from_clause [ where_clause ]

update_statement ::=
    <"UPDATE"> table_name <"SET"> set_clausen
    [ where_clause ]

table_name ::= #"[-_A-Za-z][-\w]*"

where_clause ::= <"WHERE">
                 ( between_clause
                 | binary_comparison )
                 [ { <"AND">
                     ( between_clause
                     | binary_comparison )
                   }+ ]

insert_cols ::= #"[-_A-Za-z][-\w]*" [ { <","> #"[-_A-Za-z][-\w]*" }+ ]

insert_vals ::= ( string_literal
                | boolean_literal
                | exact_numeric_literal
                | approximate_numeric_literal
                | keyword_literal
                | date_literal
                | datetime_literal
                | epochal_literal
                | inst_literal
                | uuid_literal
                | uri_literal
                | bytes_literal )
                [ {
                  <",">
                  ( string_literal
                  | boolean_literal
                  | exact_numeric_literal
                  | approximate_numeric_literal
                  | keyword_literal
                  | date_literal
                  | datetime_literal
                  | epochal_literal
                  | inst_literal
                  | uuid_literal
                  | uri_literal
                  | bytes_literal )
                  }+ ]

from_clause ::= <"FROM"> table_ref [ { <","> table_ref }+ ]

select_list ::= ( column_name
                | qualified_asterisk
                | string_literal
                | boolean_literal
                | keyword_literal
                | date_literal
                | datetime_literal
                | epochal_literal
                | inst_literal
                | uuid_literal
                | exact_numeric_literal
                | approximate_numeric_literal
                | uri_literal
                | bytes_literal )
                [ {
                  <",">
                  ( column_name
                  | qualified_asterisk
                  | string_literal
                  | boolean_literal
                  | keyword_literal
                  | date_literal
                  | datetime_literal
                  | epochal_literal
                  | inst_literal
                  | uuid_literal
                  | exact_numeric_literal
                  | approximate_numeric_literal
                  | uri_literal
                  | bytes_literal )
                  }+ ]

set_clausen ::= assignment_pair [ { <","> assignment_pair }+ ]

between_clause ::= column_name <"BETWEEN">
               {
                 (
                   ( date_literal | datetime_literal | epochal_literal
                   | inst_literal )
                   <"AND">
                   ( date_literal | datetime_literal | epochal_literal
                   | inst_literal )
                 )
                 |
                 (
                   ( exact_numeric_literal | approximate_numeric_literal
                   | uuid_literal )
                   <"AND">
                   ( exact_numeric_literal | approximate_numeric_literal
                   | uuid_literal )
                 )
               }

binary_comparison ::= column_name
                  {
                    ( #"(<=|<|>=|>)"
                      ( column_name
                      | date_literal
                      | datetime_literal
                      | epochal_literal
                      | inst_literal
                      | exact_numeric_literal
                      | approximate_numeric_literal
                      | uuid_literal ) )
                    |
                    ( #"(=|!=|<>)"
                      ( column_name
                      | keyword_literal
                      | boolean_literal
                      | date_literal
                      | datetime_literal
                      | epochal_literal
                      | inst_literal
                      | exact_numeric_literal
                      | approximate_numeric_literal
                      | string_literal
                      | uuid_literal
                      | uri_literal ) )
                  }

string_literal ::= #"'(?:[^'\\]|\\.)*?'"

exact_numeric_literal ::= #"(\d+(\.(\d+)?)?|\.\d+)"

approximate_numeric_literal ::= #"(\d+(\.(\d+)?)?|\.\d+)[eE](?:\+|-)?\d+"

boolean_literal ::= true | false

true ::= <"TRUE">

false ::= <"FALSE">

inst_literal ::= <"#inst">
     <"\"">
     #"\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d{3})?([-\+]\d{2}:\d{2})?)?"
     <"\"">

date_literal ::= <"date"> <"'"> #"\d{4}-\d{2}-\d{2}" <"'">

datetime_literal ::= <"datetime">
                     <"'">
                     #"\d{4}-\d{2}-\d{2}[ T]\d{2}:\d{2}:\d{2}"
                     <"'">

epochal_literal ::= <"time"> <"'"> #"\d+" <"'">

keyword_literal ::= <":"> #"[-\.\*\+\$\?\|_/<>=%!#\w]+"

uuid_literal ::= <"#uuid">
     <"\"">
     #"[\da-f]{8}-[\da-f]{4}-[\da-f]{4}-[\da-f]{4}-[\da-f]{12}"
     <"\"">

uri_literal ::= <"#uri"> <"\""> #"[^\"]+" <"\"">

bytes_literal ::= <#"#(bytes|base64)"> <"\""> #"[A-Za-z0-9+/=]+" <"\"">

table_ref ::= table_name [ table_alias ]

(* TODO:
The keyword-as-col-name syntax is clear in the case of WHERE clauses,
but leave some ambiguity when used in SELECT column lists.
In `SELECT :product/title FROM product WHERE :product/prod-id = 1234`,
should :product/title be interpreted as a keyword literal (seems useless),
or should it map to `[?e :product/title ?v]`?
Grammar currently interprets it as a keyword literal.
*)
column_name ::= #'("[^\"]+"|[-_A-Za-z][-\w]*)'
                <"."> #'("[^\"]+"|[-_A-Za-z][-\w]*)'
              | <":">
                #"([-\.\*\+\$\?\|_<>=%!#\w]+)"
                <"/">
                #"([-\.\*\+\$\?\|_<>=%!#\w]+)"

qualified_asterisk ::= #'("[^\"]+"|[-_A-Za-z][-\w]*)' <"."> <"*">

assignment_pair ::= column_name <"=">
                    ( string_literal
                    | boolean_literal
                    | exact_numeric_literal
                    | approximate_numeric_literal
                    | keyword_literal
                    | date_literal
                    | datetime_literal
                    | epochal_literal
                    | inst_literal
                    | uuid_literal
                    | uri_literal
                    | bytes_literal )

table_alias ::= [ <"AS"> ] #'"[^\"]+"|[-_A-Za-z][-\w]*'

(* TODO:
- support IN clauses in WHERE
- support OR in WHERE
- support NOT (???)
*)
